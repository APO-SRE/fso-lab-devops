#!/bin/sh -eu
#---------------------------------------------------------------------------------------------------
# Undeploy TeaStore Log4Shell vulnerability from Kubernetes (EKS).
#
# Log4Shell (CVE-2021-44228) is a software vulnerability in Log4j, involving arbitrary code
# execution. The vulnerability takes advantage of Log4j's allowance of requests to arbitrary
# LDAP and JNDI servers, allowing attackers to execute Java code on a server or other computer,
# or leak sensitive information. The exploit is simple to execute and is estimated to affect
# hundreds of millions of devices.
#
# Using this deployment script, FSO Lab participants learn how AppDynamics Secure Application can
# protect organizations and users from these kinds of attacks by deploying an LDAP server with a
# malicious client, named the 'hackey load service', that executes a 'curl' command to exploit the
# vulnerability every 30 minutes.
#
# For more details, please visit:
#   https://en.wikipedia.org/wiki/Log4Shell
#
# NOTE: All inputs are defined by external environment variables.
#       Optional variables have reasonable defaults, but you may override as needed.
#       Script should be run with installed user privilege (i.e. 'non-root' user).
#---------------------------------------------------------------------------------------------------

# set default values for input environment variables if not set. -----------------------------------
# [OPTIONAL] teastore log4shell vulnerability deploy parameters [w/ defaults].
eks_kubeconfig_filepath="${eks_kubeconfig_filepath:-${HOME}/.kube/config}"
kubectl_pause_time="${kubectl_pause_time:-10}"

# define usage function. ---------------------------------------------------------------------------
usage() {
  cat <<EOF
Usage:
  Undeploy TeaStore Log4Shell vulnerability from Kubernetes (EKS).

  NOTE: All inputs are defined by external environment variables.
        Optional variables have reasonable defaults, but you may override as needed.
        Script should be run with installed user privilege (i.e. 'non-root' user).

  [OPTIONAL] teastore log4shell vulnerability deploy parameters [w/ defaults].
    [ec2-user]$ export eks_kubeconfig_filepath="${HOME}/.kube/config"            # [optional] EKS kubeconfig file (defaults to '${HOME}/.kube/config').
    [ec2-user]$ export kubectl_pause_time="10"                                   # [optional] 'kubectl' pause time to allow undeployments to complete. (defaults to '10').

    [ec2-user]$ $0
EOF
}

# validate kubernetes config files. ----------------------------------------------------------------
# test if aws eks kubeconfig file exists.
if [ ! -f "$eks_kubeconfig_filepath" ]; then
  echo "Error: EKS kubeconfig file '${eks_kubeconfig_filepath}' does NOT exist."
  usage
  exit 1
fi

# validate the teastore application project. -------------------------------------------------------
# test if teastore application project directory exists.
if [ ! -d "${HOME}/TeaStore/examples/fso-hybrid" ]; then
  echo "Error: TeaStore folder '${HOME}/TeaStore/examples/fso-hybrid' does NOT exist."
  usage
  exit 1
fi

# undeploy the teastore log4shell vulnerability from the kubernetes environment. -------------------
echo "cd $HOME/TeaStore/examples/fso-hybrid/"
cd $HOME/TeaStore/examples/fso-hybrid/

# undeploy the teastore hacky load service from aws eks. ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
echo "----------------------------------------------------------------------------------------------------"
echo "Undeploying the TeaStore Hacky Load service from AWS EKS cluster..."
echo "kubectl delete -f ./teastore-hacky-load.yaml --kubeconfig ${eks_kubeconfig_filepath}"
kubectl delete -f ./teastore-hacky-load.yaml --kubeconfig ${eks_kubeconfig_filepath}
echo ""

# undeploy the teastore ldap service from aws eks. ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
echo "----------------------------------------------------------------------------------------------------"
echo "Undeploying the TeaStore LDAP service from AWS EKS cluster..."
echo "kubectl delete -f ./teastore-ldap.yaml --kubeconfig ${eks_kubeconfig_filepath}"
kubectl delete -f ./teastore-ldap.yaml --kubeconfig ${eks_kubeconfig_filepath}
echo ""

# allow time for the teastore front-end services to be undeployed. ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
echo "Pausing for $(($kubectl_pause_time * 9)) seconds..."
sleep $(($kubectl_pause_time * 9))
echo ""

# remove the teastore log4shell generated yaml files. ----------------------------------------------
echo "----------------------------------------------------------------------------------------------------"
echo "Deleting the TeaStore Log4Shell generated YAML files..."
echo "rm -f teastore-hacky-load.yaml"
rm -f teastore-hacky-load.yaml
echo ""

# validate the teastore services undeployment. -----------------------------------------------------
echo "----------------------------------------------------------------------------------------------------"
echo "Validating the TeaStore Log4Shell vulnerability undeployment..."

# allow time for the aws eks services to be undeployed and then validate.
echo "Checking the AWS EKS environment..."
echo "kubectl get pods -o wide --kubeconfig ${eks_kubeconfig_filepath}"
kubectl get pods -o wide --kubeconfig ${eks_kubeconfig_filepath}
echo ""

echo "kubectl get services --kubeconfig ${eks_kubeconfig_filepath}"
kubectl get services --kubeconfig ${eks_kubeconfig_filepath}
echo ""

# print completion message. ------------------------------------------------------------------------
echo "TeaStore Log4Shell vulnerability undeployment complete."

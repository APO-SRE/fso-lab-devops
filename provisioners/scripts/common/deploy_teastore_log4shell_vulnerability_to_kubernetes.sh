#!/bin/sh -eu
#---------------------------------------------------------------------------------------------------
# Deploy TeaStore Log4Shell vulnerability to Kubernetes (EKS).
#
# Log4Shell (CVE-2021-44228) is a software vulnerability in Log4j, involving arbitrary code
# execution. The vulnerability takes advantage of Log4j's allowance of requests to arbitrary
# LDAP and JNDI servers, allowing attackers to execute Java code on a server or other computer,
# or leak sensitive information. The exploit is simple to execute and is estimated to affect
# hundreds of millions of devices.
#
# Using this deployment script, FSO Lab participants learn how AppDynamics Secure Application can
# protect organizations and users from these kinds of attacks by deploying an LDAP server with a
# malicious client, named the 'hacky load service', that executes a 'curl' command to exploit the
# vulnerability every 30 minutes.
#
# For more details, please visit:
#   https://en.wikipedia.org/wiki/Log4Shell
#
# NOTE: All inputs are defined by external environment variables.
#       Optional variables have reasonable defaults, but you may override as needed.
#       Script should be run with installed user privilege (i.e. 'non-root' user).
#---------------------------------------------------------------------------------------------------

# set default values for input environment variables if not set. -----------------------------------
# [OPTIONAL] teastore log4shell vulnerability deploy parameters [w/ defaults].
eks_kubeconfig_filepath="${eks_kubeconfig_filepath:-${HOME}/.kube/config}"
kubectl_pause_time="${kubectl_pause_time:-10}"

# define usage function. ---------------------------------------------------------------------------
usage() {
  cat <<EOF
Usage:
  Deploy TeaStore Log4Shell vulnerability to Kubernetes (EKS).
 
  NOTE: All inputs are defined by external environment variables.
        Optional variables have reasonable defaults, but you may override as needed.
        Script should be run with installed user privilege (i.e. 'non-root' user).

  [OPTIONAL] teastore log4shell vulnerability deploy parameters [w/ defaults].
    [ec2-user]$ export eks_kubeconfig_filepath="\$HOME/.kube/config"              # [optional] EKS kubeconfig file (defaults to '\$HOME/.kube/config').
    [ec2-user]$ export kubectl_pause_time="10"                                    # [optional] 'kubectl' pause time to allow deployments to complete. (defaults to '10').

    [ec2-user]$ $0
EOF
}

# validate kubernetes config files. ----------------------------------------------------------------
# test if eks kubeconfig file exists.
if [ ! -f "$eks_kubeconfig_filepath" ]; then
  echo "Error: EKS kubeconfig file '${eks_kubeconfig_filepath}' does NOT exist."
  usage
  exit 1
fi

# deploy the teastore log4shell vulnerability to the kubernetes environment. -----------------------
echo "cd $HOME/TeaStore/examples/fso-hybrid/"
cd $HOME/TeaStore/examples/fso-hybrid/

# deploy the teastore ldap service to aws eks. ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
echo "----------------------------------------------------------------------------------------------------"
echo "Deploying the TeaStore LDAP service to AWS EKS cluster..."
echo "kubectl apply -f ./teastore-ldap.yaml --kubeconfig ${eks_kubeconfig_filepath}"
kubectl apply -f ./teastore-ldap.yaml --kubeconfig ${eks_kubeconfig_filepath}
echo ""

# allow time for the teastore ldap service to be deployed.
echo "Pausing for ${kubectl_pause_time} seconds..."
sleep ${kubectl_pause_time}
echo ""

# store teastore ldap service cluster ip.
export LDAP_SERVER_CLUSTERIP=$(kubectl get services teastore-ldap --output json --kubeconfig ${eks_kubeconfig_filepath} | jq -r '.spec.clusterIP')
echo "LDAP_SERVER_CLUSTERIP: ${LDAP_SERVER_CLUSTERIP}"
echo ""

# allow time for the teastore ldap service to be deployed.
echo "Pausing for $(($kubectl_pause_time * 9)) seconds..."
sleep $(($kubectl_pause_time * 9))
echo ""

# deploy the teastore hacky load service to aws eks. ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
echo "----------------------------------------------------------------------------------------------------"
echo "Deploying the TeaStore Hacky Load service to AWS EKS cluster..."

# substitute environment variables for the teastore ldap service cluster ip.
echo "envsubst < teastore-hacky-load.yaml.template > teastore-hacky-load.yaml"
envsubst < teastore-hacky-load.yaml.template > teastore-hacky-load.yaml

# deploy the teastore hacky load service.
echo "kubectl apply -f ./teastore-hacky-load.yaml --kubeconfig ${eks_kubeconfig_filepath}"
kubectl apply -f ./teastore-hacky-load.yaml --kubeconfig ${eks_kubeconfig_filepath}
echo ""

# allow time for the teastore hacky load service to be deployed.
echo "Pausing for ${kubectl_pause_time} seconds..."
sleep ${kubectl_pause_time}
echo ""

# validate deployment of the teastore services. ----------------------------------------------------
# validate the teastore log4shell vulnerability deployment.
echo "----------------------------------------------------------------------------------------------------"
echo "Validating the TeaStore Log4Shell vulnerability deployment..."

# validate deployment of the teastore front-end services on aws eks. ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
echo "Validating the AWS EKS environment..."
echo "kubectl get pods -o wide --kubeconfig ${eks_kubeconfig_filepath}"
kubectl get pods -o wide --kubeconfig ${eks_kubeconfig_filepath}
echo ""

echo "kubectl get services --kubeconfig ${eks_kubeconfig_filepath}"
kubectl get services --kubeconfig ${eks_kubeconfig_filepath}
echo ""

# print completion message. ------------------------------------------------------------------------
echo "TeaStore Log4Shell vulnerability deployment complete."
